openapi: 3.0.0
info:
  description: This is the API for the EODHP Workspace Services.
  title: EODHP Workspace Services API
  contact: {}
  version: v1
paths:
  /accounts:
    get:
      description: Retrieve a list of billing accounts owned by the authenticated user.
      tags:
        - Billing Accounts
      summary: Get billing accounts
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/models.Account"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
  "/accounts/{id}":
    get:
      description: Retrieve details of a specific billing account by its unique ID.
      tags:
        - Billing Accounts
      summary: Get a billing account
      parameters:
        - description: Account ID
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.Account"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
  /workspaces:
    get:
      description: Retrieve a list of workspaces for the authenticated user.
      tags:
        - Workspaces
      summary: Get a list of workspaces you are a member of
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/models.WorkspaceSettings"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
  "/workspaces/{workspace-id}":
    get:
      description: Retrieve a specific workspace using its ID for the authenticated user.
      tags:
        - Workspaces
      summary: Get a workspace by ID
      parameters:
        - description: Workspace ID
          name: workspace-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.WorkspaceSettings"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
  "/workspaces/{workspace-id}/users":
    get:
      description: Retrieve a list of users who are members of the specified workspace.
      tags:
        - Workspaces
      summary: Get users of a workspace
      parameters:
        - description: Workspace ID
          name: workspace-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/models.User"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
  "/workspaces/{workspace-id}/users/{username}":
    get:
      description: Retrieve details of a specific user that is a member of the
        specified workspace.
      tags:
        - Workspaces
      summary: Get a user of a workspace
      parameters:
        - description: Workspace ID
          name: workspace-id
          in: path
          required: true
          schema:
            type: string
        - description: Username
          name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.User"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
    put:
      description: Add a user to the specified workspace by providing the workspace ID
        and username.
      tags:
        - Workspaces
      summary: Add a user to a workspace
      parameters:
        - description: Workspace ID
          name: workspace-id
          in: path
          required: true
          schema:
            type: string
        - description: Username
          name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
    delete:
      description: Remove a user from the specified workspace by providing the
        workspace ID and username.
      tags:
        - Workspaces
      summary: Remove a user from a workspace
      parameters:
        - description: Workspace ID
          name: workspace-id
          in: path
          required: true
          schema:
            type: string
        - description: Username
          name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
  "/workspaces/{workspace-id}/{user-id}/s3-tokens":
    post:
      description: Request S3 session credentials for user access to a single
        workspace. {user-id} can be set to "me" to use the token owner's user
        id.
      tags:
        - Workspaces
      summary: Request S3 session credentials
      parameters:
        - example: my-workspace
          description: Workspace ID
          name: workspace-id
          in: path
          required: true
          schema:
            type: string
        - example: me
          description: User ID
          name: user-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/handlers.S3Credentials"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
  "/workspaces/{workspace-id}/{user-id}/sessions":
    post:
      description: Request workspace scoped session credentials for user access to a
        single workspace. {user-id} can be set to "me" to use the token owner's
        user id.
      tags:
        - Workspaces
      summary: Request workspace scoped session credentials
      parameters:
        - example: my-workspace
          description: Workspace ID
          name: workspace-id
          in: path
          required: true
          schema:
            type: string
        - example: me
          description: User ID
          name: user-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/handlers.AuthSessionResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    handlers.AuthSessionResponse:
      type: object
      properties:
        access:
          type: string
        accessExpiry:
          type: string
        refresh:
          type: string
        refreshExpiry:
          type: string
        scope:
          type: string
    handlers.S3Credentials:
      type: object
      properties:
        accessKeyId:
          type: string
        expiration:
          type: string
        secretAccessKey:
          type: string
        sessionToken:
          type: string
    models.Account:
      type: object
      properties:
        accountOpeningReason:
          type: string
        accountOwner:
          type: string
        billingAddress:
          type: string
        createdAt:
          type: string
        id:
          type: string
        name:
          type: string
        organizationName:
          type: string
        status:
          type: string
        workspaces:
          type: array
          items:
            $ref: "#/components/schemas/models.WorkspaceSettings"
    models.BlockStore:
      description: Configuration for a block store.
      type: object
      properties:
        access_point_id:
          type: string
        mount_point:
          type: string
        name:
          type: string
        store_id:
          type: string
    models.ObjectStore:
      description: Configuration for an object store.
      type: object
      properties:
        access_point_arn:
          type: string
        access_url:
          type: string
        bucket:
          type: string
        env_var:
          type: string
        host:
          type: string
        name:
          type: string
        prefix:
          type: string
        store_id:
          type: string
    models.Stores:
      description: Object and block storage configurations for the workspace.
      type: object
      properties:
        block:
          type: array
          items:
            $ref: "#/components/schemas/models.BlockStore"
        object:
          type: array
          items:
            $ref: "#/components/schemas/models.ObjectStore"
    models.User:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        id:
          type: string
        lastName:
          type: string
        username:
          type: string
    models.WorkspaceSettings:
      type: object
      properties:
        account:
          type: string
        id:
          type: string
        last_updated:
          type: string
        owner:
          type: string
        name:
          type: string
        status:
          type: string
        stores:
          type: array
          items:
            $ref: "#/components/schemas/models.Stores"
