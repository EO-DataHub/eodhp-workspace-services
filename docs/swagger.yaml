definitions:
  handlers.AuthSessionResponse:
    properties:
      access:
        type: string
      accessExpiry:
        type: string
      refresh:
        type: string
      refreshExpiry:
        type: string
      scope:
        type: string
    type: object
  handlers.S3Credentials:
    properties:
      accessKeyId:
        type: string
      expiration:
        type: string
      secretAccessKey:
        type: string
      sessionToken:
        type: string
    type: object
  models.Account:
    properties:
      accountOpeningReason:
        type: string
      accountOwner:
        type: string
      billingAddress:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      organizationName:
        type: string
      status:
        type: string
      workspaces:
        items:
          $ref: '#/definitions/models.WorkspaceSettings'
        type: array
    type: object
  models.BlockStore:
    description: Configuration for a block store.
    properties:
      access_point_id:
        type: string
      mount_point:
        type: string
      name:
        type: string
      store_id:
        type: string
    type: object
  models.ObjectStore:
    description: Configuration for an object store.
    properties:
      access_point_arn:
        type: string
      access_url:
        type: string
      bucket:
        type: string
      env_var:
        type: string
      host:
        type: string
      name:
        type: string
      prefix:
        type: string
      store_id:
        type: string
    type: object
  models.Stores:
    description: Object and block storage configurations for the workspace.
    properties:
      block:
        items:
          $ref: '#/definitions/models.BlockStore'
        type: array
      object:
        items:
          $ref: '#/definitions/models.ObjectStore'
        type: array
    type: object
  models.WorkspaceSettings:
    description: Workspace configuration including associated stores.
    properties:
      account:
        type: string
      id:
        type: string
      last_updated:
        type: string
      member_group:
        type: string
      name:
        type: string
      status:
        type: string
      stores:
        items:
          $ref: '#/definitions/models.Stores'
        type: array
    type: object
info:
  contact: {}
  description: This is the API for the EODHP Workspace Services.
  title: EODHP Workspace Services API
  version: v1
paths:
  /accounts:
    get:
      consumes:
      - application/json
      description: Retrieve a list of billing accounts owned by the authenticated
        user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Account'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get billing accounts
      tags:
      - Billing Accounts
  /accounts/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific billing account by its unique ID.
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a billing account
      tags:
      - Billing Accounts
  /workspaces:
    get:
      consumes:
      - application/json
      description: Retrieve a list of workspaces for the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.WorkspaceSettings'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a list of workspaces you are a member of
      tags:
      - Workspaces
  /workspaces/{workspace-id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific workspace using its ID for the authenticated
        user.
      parameters:
      - description: Workspace ID
        in: path
        name: workspace-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.WorkspaceSettings'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a workspace by ID
      tags:
      - Workspaces
  /workspaces/{workspace-id}/{user-id}/s3-tokens:
    post:
      consumes:
      - application/json
      description: Request S3 session credentials for user access to a single workspace.
        {user-id} can be set to "me" to use the token owner's user id.
      parameters:
      - description: Workspace ID
        example: my-workspace
        in: path
        name: workspace-id
        required: true
        type: string
      - description: User ID
        example: me
        in: path
        name: user-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.S3Credentials'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Request S3 session credentials
      tags:
      - s3 credentials auth
  /workspaces/{workspace-id}/{user-id}/sessions:
    post:
      consumes:
      - application/json
      description: Request workspace scoped session credentials for user access to
        a single workspace. {user-id} can be set to "me" to use the token owner's
        user id.
      parameters:
      - description: Workspace ID
        example: my-workspace
        in: path
        name: workspace-id
        required: true
        type: string
      - description: User ID
        example: me
        in: path
        name: user-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AuthSessionResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Request workspace scoped session credentials
      tags:
      - workspace session credentials auth
swagger: "2.0"
